version: '3.8'
services:
  library-chatbox:
    build: 
      context: ./library-chatbox
    image: ${DOCKERHUB_USERNAME}/library-chatbox:latest
    container_name: library-chatbox
    environment: 
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "3000:3000"
    networks:
      - backend
  config-service:
    build:
      context: ./config-service
    image: ${DOCKERHUB_USERNAME}/config-service:latest
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  discovery-service:
      build:
        context: ./discovery-service
      image: ${DOCKERHUB_USERNAME}/discovery-service:latest
      container_name: discovery-service
      ports:
        - "8761:8761"
      networks:
        - backend
      depends_on:
        - config-service
      environment:
        - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
        - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
        - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
        - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
        - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
        - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
        - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
        - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
        - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
        - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
        - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
        - EMAIL_USERNAME=${EMAIL_USERNAME}
        - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  gateway-service:
    build:
      context: ./gateway-service
    image: ${DOCKERHUB_USERNAME}/gateway-service:latest
    container_name: gateway-service
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - config-service
      - discovery-service
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  user-service:
    build:
      context: ./user-service
    image: ${DOCKERHUB_USERNAME}/user-service:latest
    container_name: user-service
    ports:
      - "8081:8081"
    networks:
      - backend
    depends_on:
      - config-service
      - discovery-service
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  book-service:
    build:
      context: ./book-service
    image: ${DOCKERHUB_USERNAME}/book-service:latest
    container_name: book-service
    ports:
      - "8082:8082"
    networks:
      - backend
    depends_on:
      - config-service
      - discovery-service
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  borrowing-service:
    build:
      context: ./borrowing-service
    image: ${DOCKERHUB_USERNAME}/borrowing-service:latest
    container_name: borrowing-service
    ports:
      - "8083:8083"
    networks:
      - backend
    depends_on:
      - config-service
      - discovery-service
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  inventory-service:
    build:
      context: ./inventory-service
    image: ${DOCKERHUB_USERNAME}/inventory-service:latest
    container_name: inventory-service
    ports:
      - "8084:8084"
    networks:
      - backend
    depends_on:
      - config-service
      - discovery-service
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
  notification-service:
    build:
      context: ./notification-service
    image: ${DOCKERHUB_USERNAME}/notification-service:latest
    container_name: notification-service
    ports:
      - "8085:8085"
    networks:
      - backend
    environment:
      - CONFIG_SERVICE_URL=${CONFIG_SERVICE_URL}
      - SPRING_CLOUD_CONFIG_PROFILE=${SPRING_CLOUD_CONFIG_PROFILE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}
      - SPRING_DATA_REDIS_TIMEOUT=${SPRING_DATA_REDIS_TIMEOUT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}

    depends_on:
      - config-service
      - discovery-service
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${SPRING_DATA_REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    restart: unless-stopped
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - backend

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
